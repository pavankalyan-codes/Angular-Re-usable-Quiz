{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "QuizService",
            "id": "injectable-QuizService-1574f50a0de683aee6605d0cb0c9724e",
            "file": "projects/quiz/src/lib/quiz.service.ts",
            "properties": [],
            "methods": [],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuizService {\n\n  constructor() { }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-ee2067dfb1c303f41003aea7d82d51e0",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Option",
            "id": "class-Option-b72b64549d90c6181d98eaa333d6ef1b",
            "file": "src/app/question.model.ts",
            "type": "class",
            "sourceCode": "export class Question {\n  questionText: string;\n  questionId: string;\n  options: Option[];\n  answer?: string;\n  isLast?: boolean;\n}\nexport class Option {\n  optionId: string;\n  optionText: string;\n}\n",
            "properties": [
                {
                    "name": "optionId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "optionText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Option",
            "id": "class-Option-b72b64549d90c6181d98eaa333d6ef1b-1",
            "file": "projects/quiz/src/lib/question.model.ts",
            "type": "class",
            "sourceCode": "export class Question {\n  questionText: string;\n  questionId: string;\n  options: Option[];\n  answer?: string;\n  isLast?: boolean;\n}\nexport class Option {\n  optionId: string;\n  optionText: string;\n}\n",
            "properties": [
                {
                    "name": "optionId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "optionText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Option-1"
        },
        {
            "name": "Question",
            "id": "class-Question-b72b64549d90c6181d98eaa333d6ef1b",
            "file": "src/app/question.model.ts",
            "type": "class",
            "sourceCode": "export class Question {\n  questionText: string;\n  questionId: string;\n  options: Option[];\n  answer?: string;\n  isLast?: boolean;\n}\nexport class Option {\n  optionId: string;\n  optionText: string;\n}\n",
            "properties": [
                {
                    "name": "answer",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "isLast",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "options",
                    "type": "Option[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "questionId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "questionText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Question",
            "id": "class-Question-b72b64549d90c6181d98eaa333d6ef1b-1",
            "file": "projects/quiz/src/lib/question.model.ts",
            "type": "class",
            "sourceCode": "export class Question {\n  questionText: string;\n  questionId: string;\n  options: Option[];\n  answer?: string;\n  isLast?: boolean;\n}\nexport class Option {\n  optionId: string;\n  optionText: string;\n}\n",
            "properties": [
                {
                    "name": "answer",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "isLast",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "options",
                    "type": "Option[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "questionId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "questionText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Question-1"
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-b7e9572447bb79fc03a1ace96649c383",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "questionData",
                    "defaultValue": "[]",
                    "type": "Question[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "title",
                    "defaultValue": "'Quiz'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "show",
                    "args": [
                        {
                            "name": "answers",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 470,
                    "jsdoctags": [
                        {
                            "name": "answers",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Question } from './question.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'Quiz';\n  questionData: Question[] = [];\n\n  constructor() {\n    this.questionData = [\n      {\n        questionId: '4278e38b-3e5f-491e-95f0-eb6f81045131',\n        questionText:\n          'Ad aliquip aute labore pariatur eu dolor cillum esse nisi commodo ad elit.',\n        options: [\n          {\n            optionId: '9d52ca3f-f2fd-4c81-ba60-a26951afb6c1',\n            optionText: 'in',\n          },\n          {\n            optionId: 'accb3e42-65d5-435f-a593-a799f1db16d4',\n            optionText: 'excepteur',\n          },\n          {\n            optionId: '1a164ee8-d926-4867-a2b3-121a76de5b19',\n            optionText: 'officia',\n          },\n          {\n            optionId: '5bb97d73-8ab4-4c07-a6fa-68645137fffa',\n            optionText: 'sunt',\n          },\n        ],\n      },\n      {\n        questionId: 'a6f95728-8adf-4579-a21c-32408f0d19d9',\n        questionText:\n          'Voluptate labore ad deserunt enim voluptate adipisicing.',\n        options: [\n          {\n            optionId: 'b492d865-5d45-4d22-afcc-82c7a8cc3e1f',\n            optionText: 'aliqua',\n          },\n          {\n            optionId: '2a6eaa91-a7fa-447b-bdd8-cc33fbd828a1',\n            optionText: 'cillum',\n          },\n          {\n            optionId: '58baa932-841c-4753-aaaa-4d335eac6c92',\n            optionText: 'irure',\n          },\n          {\n            optionId: '9edb4e9e-6121-4059-97ed-bf7efec81b00',\n            optionText: 'ipsum',\n          },\n        ],\n      },\n      {\n        questionId: 'f1bca690-0497-4ed8-a095-25c7f9680b7a',\n        questionText:\n          'Consectetur do qui officia cupidatat non proident magna dolore aliqua.',\n        options: [\n          {\n            optionId: 'b2213161-778c-4057-9e58-093e46cf7ded',\n            optionText: 'exercitation',\n          },\n          {\n            optionId: '866c4b7f-d04e-4865-814a-39ab59ed5811',\n            optionText: 'in',\n          },\n          {\n            optionId: 'ffec8b48-08b4-468b-81c5-3fcb29dcafa4',\n            optionText: 'nisi',\n          },\n          {\n            optionId: '3bb2480d-8ffe-4bec-8199-74fccdc06778',\n            optionText: 'dolor',\n          },\n        ],\n      },\n      {\n        questionId: '4b97d991-9a3d-4dbb-b16c-f4c7e1cf6c01',\n        questionText: 'In qui qui consectetur et.',\n        options: [\n          {\n            optionId: 'aeeffaf7-30e2-4ece-a2b3-0ae9dfd847b8',\n            optionText: 'proident',\n          },\n          {\n            optionId: 'ef7c08e5-2ab4-4dd0-ad9c-6bbf4595a488',\n            optionText: 'ut',\n          },\n          {\n            optionId: '03e53c55-9b91-4604-84a5-ab1680b778e9',\n            optionText: 'laborum',\n          },\n          {\n            optionId: '98186cae-cd4c-4f28-85e0-1b64c7aec758',\n            optionText: 'sunt',\n          },\n        ],\n      },\n      {\n        questionId: '4ee1f6e4-4f40-4a29-b9ad-dc84ffcd5fce',\n        questionText: 'Duis enim qui minim ea esse.',\n        options: [\n          {\n            optionId: '7a8ed59c-9f6b-4d41-80a0-82db91f1dd3d',\n            optionText: 'aute',\n          },\n          {\n            optionId: '55c89ea1-1954-4076-bda0-19bb3617c939',\n            optionText: 'elit',\n          },\n          {\n            optionId: 'faf3f653-f287-4ebe-8855-132584d287df',\n            optionText: 'non',\n          },\n          {\n            optionId: '1118d3b4-1e4f-4c31-bc7a-cc2515d8fd0b',\n            optionText: 'velit',\n          },\n        ],\n      },\n      {\n        questionId: '6b04d8e3-3a6d-4c20-b1ea-184f99c394ee',\n        questionText:\n          'Lorem eu aliqua proident occaecat ipsum laborum officia dolor laboris excepteur.',\n        options: [\n          {\n            optionId: '5ac04f76-cf1d-4955-9ffb-92d0f5a2e95c',\n            optionText: 'nisi',\n          },\n          {\n            optionId: '5d688e2a-8a80-4794-83dd-373268eb8e10',\n            optionText: 'occaecat',\n          },\n          {\n            optionId: '373f53ea-a669-43c9-a896-b4d5160f4822',\n            optionText: 'officia',\n          },\n          {\n            optionId: '782572f7-9cbc-4a55-b34a-06a0f9ab065e',\n            optionText: 'eiusmod',\n          },\n        ],\n      },\n      {\n        questionId: '1ba436c2-fb14-4693-bd20-c07ab8a6f5e1',\n        questionText:\n          'Tempor deserunt et deserunt officia est id et est commodo velit deserunt ut.',\n        options: [\n          {\n            optionId: '156d112a-b544-4c0f-9f0c-ca9d8ed2b6d2',\n            optionText: 'Lorem',\n          },\n          {\n            optionId: '0bea36fa-4d2d-40ee-9ad5-39a4193a768e',\n            optionText: 'id',\n          },\n          {\n            optionId: 'a990c8a8-0661-4dd8-9386-0bf548255d7f',\n            optionText: 'duis',\n          },\n          {\n            optionId: 'f4250b88-554d-47b6-9eb8-0b5e670eb63c',\n            optionText: 'mollit',\n          },\n        ],\n      },\n      {\n        questionId: 'cbf1b6d5-33f4-48a9-b498-7e27adb3c8de',\n        questionText:\n          'Anim et non sit dolore minim nisi occaecat ipsum officia dolore velit occaecat est.',\n        options: [\n          {\n            optionId: '309149e0-af65-476c-93ae-679f1c58fa18',\n            optionText: 'cupidatat',\n          },\n          {\n            optionId: 'a83d3e67-bede-4072-b5bc-ff5493ecd877',\n            optionText: 'id',\n          },\n          {\n            optionId: 'e3d00f08-9d12-4913-b3cb-22f3a8bd2c2f',\n            optionText: 'dolor',\n          },\n          {\n            optionId: '30db466d-0240-4acc-8cef-3a0e975ef56d',\n            optionText: 'ut',\n          },\n        ],\n      },\n      {\n        questionId: '3302684d-8546-4340-9e07-32159720fe2f',\n        questionText: 'Consequat ullamco ut aliqua veniam laboris.',\n        options: [\n          {\n            optionId: '0579a412-5282-4f85-b54d-b1276996b967',\n            optionText: 'Lorem',\n          },\n          {\n            optionId: '72a91e9e-7d0f-455a-b57b-a0d367eefe55',\n            optionText: 'non',\n          },\n          {\n            optionId: '9ed93037-1b97-4bdf-b82a-46fa37a1a112',\n            optionText: 'aliqua',\n          },\n          {\n            optionId: 'a2b24f46-ca2a-467a-b8ee-b353f11dfe51',\n            optionText: 'laborum',\n          },\n        ],\n      },\n      {\n        questionId: 'eca3521a-b7ed-449f-9519-d3f378203649',\n        questionText: 'Do dolor ullamco irure minim.',\n        options: [\n          {\n            optionId: 'e188296a-d9ad-4025-9e99-5cd157fcc919',\n            optionText: 'do',\n          },\n          {\n            optionId: 'd4f9adb3-10de-48c6-8dc0-3c33f5d5a658',\n            optionText: 'cupidatat',\n          },\n          {\n            optionId: 'f3f91845-69bd-4009-9af1-d3f832a179af',\n            optionText: 'mollit',\n          },\n          {\n            optionId: '8a88191e-9d4e-42ae-8af4-b9833b2e9342',\n            optionText: 'qui',\n          },\n        ],\n      },\n      {\n        questionId: '846331c6-8b8a-4928-806a-2abede8ac1a2',\n        questionText:\n          'Laborum nostrud eu non esse sunt enim ad culpa eu dolore sit.',\n        options: [\n          {\n            optionId: '2d4e54c9-362a-4fed-9182-217dd432ae72',\n            optionText: 'minim',\n          },\n          {\n            optionId: '15964224-575b-4c37-be37-468b86656760',\n            optionText: 'dolore',\n          },\n          {\n            optionId: '767fd227-4cba-4b46-acf3-0108fe8ceac1',\n            optionText: 'nulla',\n          },\n          {\n            optionId: 'eef9e792-5d51-4169-a80d-c93c3d150bdd',\n            optionText: 'nulla',\n          },\n        ],\n      },\n      {\n        questionId: '02e19a2d-5207-402e-bb85-fb1bd60bbb18',\n        questionText: 'Nisi in Lorem dolore ut ex reprehenderit deserunt sint.',\n        options: [\n          {\n            optionId: '9cf1e890-a245-4887-9e59-9aba9dcdb524',\n            optionText: 'aliquip',\n          },\n          {\n            optionId: 'a643e79d-cddb-4052-b274-ae45540fb3d9',\n            optionText: 'veniam',\n          },\n          {\n            optionId: '6cc5b882-36d5-47aa-90b1-9c08647681b2',\n            optionText: 'laboris',\n          },\n          {\n            optionId: '39f9af2f-5f43-4957-bbd3-8cd4002edc8b',\n            optionText: 'esse',\n          },\n        ],\n      },\n      {\n        questionId: '5ff4d18d-869f-4741-ac39-5ff09ba5989c',\n        questionText: 'Id elit tempor nostrud nisi et elit est.',\n        options: [\n          {\n            optionId: 'a9509384-8361-482a-a06d-8ffae177fb2f',\n            optionText: 'do',\n          },\n          {\n            optionId: '012cef7f-2bd4-40e8-95de-136b27b98e4c',\n            optionText: 'ut',\n          },\n          {\n            optionId: '4b81e7e4-44db-444a-a1de-1c69ba252937',\n            optionText: 'minim',\n          },\n          {\n            optionId: 'd457199f-28e0-4636-a283-995e55ee3dea',\n            optionText: 'est',\n          },\n        ],\n      },\n      {\n        questionId: '1f703920-330c-4799-b1b7-207543f7ccac',\n        questionText: 'Aliquip eiusmod ad ullamco sint Lorem pariatur est do.',\n        options: [\n          {\n            optionId: 'f88bdc2a-ef92-4f0c-9269-f333abf539d5',\n            optionText: 'voluptate',\n          },\n          {\n            optionId: '3611ef67-a922-4dc5-b86f-81d3bbb432a6',\n            optionText: 'velit',\n          },\n          {\n            optionId: '358a2e2a-029b-4dbf-a8a7-37eb4c3e950f',\n            optionText: 'qui',\n          },\n          {\n            optionId: '088bffac-4295-4c54-9959-ac6d56f694f3',\n            optionText: 'magna',\n          },\n        ],\n      },\n      {\n        questionId: 'f8120196-653b-4f1c-85cb-e87e9a1e40bc',\n        questionText:\n          'Nostrud dolore culpa enim consequat dolore sint consequat.',\n        options: [\n          {\n            optionId: '5f6d1def-4ff9-47b6-afe7-8b7b6bcc61aa',\n            optionText: 'ea',\n          },\n          {\n            optionId: '8cf09132-93ca-4de6-9a6b-72cda8ef6165',\n            optionText: 'est',\n          },\n          {\n            optionId: '236d3bec-7065-448a-8692-8f8e4318555f',\n            optionText: 'deserunt',\n          },\n          {\n            optionId: '0cbc6a7f-2455-490c-a5e7-622c87242157',\n            optionText: 'dolor',\n          },\n        ],\n      },\n      {\n        questionId: '3f7a8073-e1d8-46c6-ad3b-403958fb0bc9',\n        questionText: 'Aliquip commodo esse cillum fugiat velit.',\n        options: [\n          {\n            optionId: 'aa6725ea-1843-4c49-8bd9-24deac22ccbe',\n            optionText: 'magna',\n          },\n          {\n            optionId: '320690fc-4970-4d65-a992-655c90572f35',\n            optionText: 'incididunt',\n          },\n          {\n            optionId: '41865ccb-20ab-4916-b53f-cc7cd8633cea',\n            optionText: 'nulla',\n          },\n          {\n            optionId: 'fcd4155f-2f33-4e1b-b4aa-0e18b34b3e32',\n            optionText: 'aliquip',\n          },\n        ],\n      },\n      {\n        questionId: 'b57ccbce-244f-45a5-a605-10f73771696b',\n        questionText:\n          'Proident culpa reprehenderit voluptate consectetur veniam elit labore aute aliquip.',\n        options: [\n          {\n            optionId: 'c7dba2cd-dfb6-4834-aebf-a4f48c645df4',\n            optionText: 'nostrud',\n          },\n          {\n            optionId: '2b813896-dfdd-442e-86d1-f4c61e1f0bd0',\n            optionText: 'eiusmod',\n          },\n          {\n            optionId: 'ce275057-9110-4e20-b84b-5a1741c155fc',\n            optionText: 'amet',\n          },\n          {\n            optionId: '4f810b68-b8ce-458b-a926-ffeb37d90c5c',\n            optionText: 'dolor',\n          },\n        ],\n      },\n      {\n        questionId: '0de8e6ac-683d-4d8b-8df9-20b992c56d6f',\n        questionText:\n          'Aliqua veniam ex eiusmod mollit ipsum ipsum duis eiusmod.',\n        options: [\n          {\n            optionId: '9f5457e1-4c47-4c8e-bf15-fceff4a5e526',\n            optionText: 'sint',\n          },\n          {\n            optionId: 'c3ef4fa9-31cc-4379-8eba-447db09aad55',\n            optionText: 'ad',\n          },\n          {\n            optionId: '929ef1e6-9d2d-49cb-ab92-b08620ab0408',\n            optionText: 'pariatur',\n          },\n          {\n            optionId: 'bee7cc4e-e926-48f1-9665-cb8bd875035d',\n            optionText: 'mollit',\n          },\n        ],\n      },\n      {\n        questionId: 'c0e23e57-3433-4032-a671-2d73b0055467',\n        questionText:\n          'Est ad labore magna culpa aute nulla ex tempor dolor sit eu fugiat magna ipsum.',\n        options: [\n          {\n            optionId: '56bc2f22-e6fe-4692-9a52-4591c9459bac',\n            optionText: 'occaecat',\n          },\n          {\n            optionId: '1cdbca71-8f92-4c78-8fa0-af1ba12959a1',\n            optionText: 'laborum',\n          },\n          {\n            optionId: '758df2c8-b1e0-4a49-8dd4-ceeca6b46f2c',\n            optionText: 'labore',\n          },\n          {\n            optionId: '6385958b-2a1e-44d9-9bd6-b9cb41d55168',\n            optionText: 'sunt',\n          },\n        ],\n      },\n      {\n        questionId: '7956c411-d8f0-4bf9-9162-bb364747a28d',\n        questionText:\n          'Adipisicing aliqua dolore laboris duis in exercitation et.',\n        options: [\n          {\n            optionId: '1eacef38-a9f0-4255-9e1a-569be090e788',\n            optionText: 'nisi',\n          },\n          {\n            optionId: 'c1217087-1635-47ac-80e8-8321282a6393',\n            optionText: 'magna',\n          },\n          {\n            optionId: '89408216-4f39-442c-9ab1-2b8c2bd9859b',\n            optionText: 'nostrud',\n          },\n          {\n            optionId: '45176fd6-944c-470c-a402-373bad56d387',\n            optionText: 'dolor',\n          },\n        ],\n      },\n    ];\n  }\n\n  show(answers) {\n    console.log(answers);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "templateData": "<lib-quiz [questionData]=\"questionData\" (answerData)=\"show($event)\"></lib-quiz>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-642c6c4e474cd5a0ac760dfda26b2fc9",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 40
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-246e2a69dc126a3bd76c6328dd3b93e2",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 53,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-8f196770333aa216860a88c0b6b221aa",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 64,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 73,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 67,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 70,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "QuizComponent",
            "id": "component-QuizComponent-129a661d1fc520ce91577aa3195e2b14",
            "file": "projects/quiz/src/lib/quiz.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-quiz",
            "styleUrls": [],
            "styles": [
                "\n      .divLast {\n        height: 60px;\n        border-bottom: 3px solid #cecece;\n        margin-left: 10%;\n        margin-right: 10%;\n      }\n      .dot:hover {\n        height: 25px;\n        width: 25px;\n        position: relative;\n        top: 45px;\n        background-color: rgb(41, 212, 41);\n        font-size: 18px;\n        text-align: center;\n        font-weight: 700;\n      }\n      .attempted {\n        background-color: rgb(41, 212, 41) !important;\n      }\n      .dot-outer {\n        width: 30px;\n        display: flex;\n        justify-content: center;\n        font-size: 18px;\n        text-align: center;\n        font-weight: 700;\n      }\n      .dot {\n        position: relative;\n        cursor: pointer;\n        top: 51px;\n        height: 14px;\n        width: 14px;\n        background-color: #bbb;\n        border-radius: 50%;\n        display: inline-block;\n        color: white;\n        font-size: 0px;\n      }\n      .left-end {\n        width: 30px;\n        display: flex;\n        justify-content: center;\n      }\n      .right-end {\n        width: 30px;\n        display: flex;\n        justify-content: center;\n      }\n      .selected {\n        height: 25px;\n        width: 25px;\n        position: relative;\n        top: 45px;\n        background-color: rgb(41, 212, 41);\n        font-size: 18px;\n        text-align: center;\n        font-weight: 700;\n      }\n      .question {\n        flex-direction: column;\n        display: flex;\n        margin-left: 10%;\n        margin-right: 10%;\n      }\n      .options {\n        display: flex;\n        flex-flow: wrap;\n        flex-direction: row;\n      }\n\n      .option {\n        background-color: rgb(255, 255, 255);\n        z-index: 0;\n        width: 40%;\n        border-radius: 10px;\n        box-shadow: 0 14px 21px rgba(0, 0, 0, 0.25),\n          0 0px 1px rgba(0, 0, 0, 0.22);\n        cursor: pointer;\n      }\n      .option:hover {\n        transform: scale(1.05);\n\n        transition: all 0.2s ease-out;\n        //animation: 1s ease-out 0s 1 normal none running fadeIn;\n        box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n          0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\n          0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n          0 41.8px 33.4px rgba(0, 0, 0, 0.086), 0 25px 20px rgba(0, 0, 0, 0.12);\n        background-color: rgb(41, 212, 41);\n        color: white;\n      }\n      .quiz {\n        background-color: rgb(250, 250, 250);\n        height: 90%;\n        overflow: auto;\n      }\n      @media only screen and (max-width: 500px) {\n        .options {\n          flex-direction: column;\n        }\n        .option {\n          width: 100%;\n        }\n        .divLast {\n          display: none !important;\n        }\n      }\n      .submit {\n        width: 100%;\n        height: 10%;\n      }\n      .btnSubmit {\n        height: 50px;\n        margin: auto;\n        background-color: rgb(41, 212, 41);\n        color: white;\n      }\n\n      .btn:focus,\n      .btn:active {\n        outline: none !important;\n        box-shadow: none !important;\n      }\n      .selectedOption {\n        background-color: rgb(41, 212, 41);\n        color: white;\n        transform: scale(1.025);\n      }\n      .root-div {\n        height: 100vh;\n        font-family: 'Trebuchet MS', sans-serif;\n      }\n      .re,\n      .le {\n        background-color: #fafafa;\n        position: relative;\n        top: 51px;\n      }\n    "
            ],
            "template": "<div class=\"root-div\">\n  <div class=\"quiz\">\n    <div class=\"divLast d-flex justify-content-between\">\n      <div *ngFor=\"let question of questionData; let i = index\">\n        <div *ngIf=\"i == 0\">\n          <div class=\"left-end col-12\" (click)=\"selectQuestion(i)\">\n            <div class=\"col-3 le\"></div>\n            <div\n              class=\"dot col-6\"\n              [class.attempted]=\"answers[question.questionId] != null\"\n              [class]=\"\n                currentQuestion.questionId == question.questionId\n                  ? 'selected'\n                  : ''\n              \"\n            >\n              {{ i + 1 }}\n            </div>\n            <div class=\"col-3\"></div>\n          </div>\n        </div>\n        <div *ngIf=\"i == questionData.length - 1\">\n          <div class=\"right-end col-12\" (click)=\"selectQuestion(i)\">\n            <div class=\"col-3\"></div>\n            <div\n              class=\"dot col-6\"\n              [class.attempted]=\"answers[question.questionId] != null\"\n              [class]=\"\n                currentQuestion.questionId == question.questionId\n                  ? 'selected'\n                  : ''\n              \"\n            >\n              {{ i + 1 }}\n            </div>\n            <div class=\"col-3 re\"></div>\n          </div>\n        </div>\n        <div *ngIf=\"i != 0 && i != questionData.length - 1\">\n          <div class=\"dot-outer\" (click)=\"selectQuestion(i)\">\n            <div\n              class=\"dot\"\n              [class.attempted]=\"answers[question.questionId] != null\"\n              [class]=\"\n                currentQuestion.questionId == question.questionId\n                  ? 'selected'\n                  : ''\n              \"\n            >\n              {{ i + 1 }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"question\">\n      <div class=\"mt-4\">\n        {{ currentQuestionIndex + 1 }}. {{ currentQuestion.questionText }}\n      </div>\n      <div class=\"options mt-4\">\n        <div\n          class=\"mx-2 my-2 option p-3 mb-5\"\n          *ngFor=\"let option of currentQuestion.options\"\n          (click)=\"saveAnswer(currentQuestion.questionId, option.optionId)\"\n          [class]=\"\n            answers[currentQuestion.questionId] === option.optionId\n              ? 'selectedOption'\n              : ''\n          \"\n        >\n          <span>{{ option.optionText }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"submit d-flex justify-content-center\">\n    <button\n      (click)=\"submitAnswers()\"\n      class=\"btnSubmit btn btn-lg shadow-none\"\n    >\n      Submit\n    </button>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "questionData",
                    "line": 237,
                    "type": "Question[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "answerData",
                    "defaultValue": "new EventEmitter<{}>()",
                    "line": 239,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "answers",
                    "defaultValue": "{}",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 242
                },
                {
                    "name": "currentQuestion",
                    "type": "Question",
                    "optional": false,
                    "description": "",
                    "line": 246
                },
                {
                    "name": "currentQuestionIndex",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 241
                }
            ],
            "methodsClass": [
                {
                    "name": "goToNextQuestion",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 259
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 250
                },
                {
                    "name": "saveAnswer",
                    "args": [
                        {
                            "name": "qid",
                            "type": ""
                        },
                        {
                            "name": "aid",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 268,
                    "jsdoctags": [
                        {
                            "name": "qid",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "aid",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectQuestion",
                    "args": [
                        {
                            "name": "id",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 254,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "submitAnswers",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 273
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Question } from './question.model';\n@Component({\n  selector: 'lib-quiz',\n  template: `\n    <div class=\"root-div\">\n      <div class=\"quiz\">\n        <div class=\"divLast d-flex justify-content-between\">\n          <div *ngFor=\"let question of questionData; let i = index\">\n            <div *ngIf=\"i == 0\">\n              <div class=\"left-end col-12\" (click)=\"selectQuestion(i)\">\n                <div class=\"col-3 le\"></div>\n                <div\n                  class=\"dot col-6\"\n                  [class.attempted]=\"answers[question.questionId] != null\"\n                  [class]=\"\n                    currentQuestion.questionId == question.questionId\n                      ? 'selected'\n                      : ''\n                  \"\n                >\n                  {{ i + 1 }}\n                </div>\n                <div class=\"col-3\"></div>\n              </div>\n            </div>\n            <div *ngIf=\"i == questionData.length - 1\">\n              <div class=\"right-end col-12\" (click)=\"selectQuestion(i)\">\n                <div class=\"col-3\"></div>\n                <div\n                  class=\"dot col-6\"\n                  [class.attempted]=\"answers[question.questionId] != null\"\n                  [class]=\"\n                    currentQuestion.questionId == question.questionId\n                      ? 'selected'\n                      : ''\n                  \"\n                >\n                  {{ i + 1 }}\n                </div>\n                <div class=\"col-3 re\"></div>\n              </div>\n            </div>\n            <div *ngIf=\"i != 0 && i != questionData.length - 1\">\n              <div class=\"dot-outer\" (click)=\"selectQuestion(i)\">\n                <div\n                  class=\"dot\"\n                  [class.attempted]=\"answers[question.questionId] != null\"\n                  [class]=\"\n                    currentQuestion.questionId == question.questionId\n                      ? 'selected'\n                      : ''\n                  \"\n                >\n                  {{ i + 1 }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"question\">\n          <div class=\"mt-4\">\n            {{ currentQuestionIndex + 1 }}. {{ currentQuestion.questionText }}\n          </div>\n          <div class=\"options mt-4\">\n            <div\n              class=\"mx-2 my-2 option p-3 mb-5\"\n              *ngFor=\"let option of currentQuestion.options\"\n              (click)=\"saveAnswer(currentQuestion.questionId, option.optionId)\"\n              [class]=\"\n                answers[currentQuestion.questionId] === option.optionId\n                  ? 'selectedOption'\n                  : ''\n              \"\n            >\n              <span>{{ option.optionText }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"submit d-flex justify-content-center\">\n        <button\n          (click)=\"submitAnswers()\"\n          class=\"btnSubmit btn btn-lg shadow-none\"\n        >\n          Submit\n        </button>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .divLast {\n        height: 60px;\n        border-bottom: 3px solid #cecece;\n        margin-left: 10%;\n        margin-right: 10%;\n      }\n      .dot:hover {\n        height: 25px;\n        width: 25px;\n        position: relative;\n        top: 45px;\n        background-color: rgb(41, 212, 41);\n        font-size: 18px;\n        text-align: center;\n        font-weight: 700;\n      }\n      .attempted {\n        background-color: rgb(41, 212, 41) !important;\n      }\n      .dot-outer {\n        width: 30px;\n        display: flex;\n        justify-content: center;\n        font-size: 18px;\n        text-align: center;\n        font-weight: 700;\n      }\n      .dot {\n        position: relative;\n        cursor: pointer;\n        top: 51px;\n        height: 14px;\n        width: 14px;\n        background-color: #bbb;\n        border-radius: 50%;\n        display: inline-block;\n        color: white;\n        font-size: 0px;\n      }\n      .left-end {\n        width: 30px;\n        display: flex;\n        justify-content: center;\n      }\n      .right-end {\n        width: 30px;\n        display: flex;\n        justify-content: center;\n      }\n      .selected {\n        height: 25px;\n        width: 25px;\n        position: relative;\n        top: 45px;\n        background-color: rgb(41, 212, 41);\n        font-size: 18px;\n        text-align: center;\n        font-weight: 700;\n      }\n      .question {\n        flex-direction: column;\n        display: flex;\n        margin-left: 10%;\n        margin-right: 10%;\n      }\n      .options {\n        display: flex;\n        flex-flow: wrap;\n        flex-direction: row;\n      }\n\n      .option {\n        background-color: rgb(255, 255, 255);\n        z-index: 0;\n        width: 40%;\n        border-radius: 10px;\n        box-shadow: 0 14px 21px rgba(0, 0, 0, 0.25),\n          0 0px 1px rgba(0, 0, 0, 0.22);\n        cursor: pointer;\n      }\n      .option:hover {\n        transform: scale(1.05);\n\n        transition: all 0.2s ease-out;\n        //animation: 1s ease-out 0s 1 normal none running fadeIn;\n        box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n          0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\n          0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n          0 41.8px 33.4px rgba(0, 0, 0, 0.086), 0 25px 20px rgba(0, 0, 0, 0.12);\n        background-color: rgb(41, 212, 41);\n        color: white;\n      }\n      .quiz {\n        background-color: rgb(250, 250, 250);\n        height: 90%;\n        overflow: auto;\n      }\n      @media only screen and (max-width: 500px) {\n        .options {\n          flex-direction: column;\n        }\n        .option {\n          width: 100%;\n        }\n        .divLast {\n          display: none !important;\n        }\n      }\n      .submit {\n        width: 100%;\n        height: 10%;\n      }\n      .btnSubmit {\n        height: 50px;\n        margin: auto;\n        background-color: rgb(41, 212, 41);\n        color: white;\n      }\n\n      .btn:focus,\n      .btn:active {\n        outline: none !important;\n        box-shadow: none !important;\n      }\n      .selectedOption {\n        background-color: rgb(41, 212, 41);\n        color: white;\n        transform: scale(1.025);\n      }\n      .root-div {\n        height: 100vh;\n        font-family: 'Trebuchet MS', sans-serif;\n      }\n      .re,\n      .le {\n        background-color: #fafafa;\n        position: relative;\n        top: 51px;\n      }\n    `,\n  ],\n})\nexport class QuizComponent implements OnInit {\n  @Input() questionData: Question[];\n\n  @Output() answerData = new EventEmitter<{}>();\n\n  currentQuestionIndex = 0;\n  answers = {};\n\n  //currentQuestionId = '1';\n\n  currentQuestion: Question;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.currentQuestion = this.questionData[0];\n  }\n\n  selectQuestion(id) {\n    this.currentQuestionIndex = id;\n    this.currentQuestion = this.questionData[id];\n  }\n\n  goToNextQuestion() {\n    if (this.currentQuestionIndex === this.questionData.length - 1) {\n      return;\n    }\n\n    this.currentQuestionIndex++;\n    this.currentQuestion = this.questionData[this.currentQuestionIndex];\n  }\n\n  saveAnswer(qid, aid) {\n    this.answers[qid] = aid;\n    this.goToNextQuestion();\n  }\n\n  submitAnswers() {\n    this.answerData.emit(this.answers);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      .divLast {\n        height: 60px;\n        border-bottom: 3px solid #cecece;\n        margin-left: 10%;\n        margin-right: 10%;\n      }\n      .dot:hover {\n        height: 25px;\n        width: 25px;\n        position: relative;\n        top: 45px;\n        background-color: rgb(41, 212, 41);\n        font-size: 18px;\n        text-align: center;\n        font-weight: 700;\n      }\n      .attempted {\n        background-color: rgb(41, 212, 41) !important;\n      }\n      .dot-outer {\n        width: 30px;\n        display: flex;\n        justify-content: center;\n        font-size: 18px;\n        text-align: center;\n        font-weight: 700;\n      }\n      .dot {\n        position: relative;\n        cursor: pointer;\n        top: 51px;\n        height: 14px;\n        width: 14px;\n        background-color: #bbb;\n        border-radius: 50%;\n        display: inline-block;\n        color: white;\n        font-size: 0px;\n      }\n      .left-end {\n        width: 30px;\n        display: flex;\n        justify-content: center;\n      }\n      .right-end {\n        width: 30px;\n        display: flex;\n        justify-content: center;\n      }\n      .selected {\n        height: 25px;\n        width: 25px;\n        position: relative;\n        top: 45px;\n        background-color: rgb(41, 212, 41);\n        font-size: 18px;\n        text-align: center;\n        font-weight: 700;\n      }\n      .question {\n        flex-direction: column;\n        display: flex;\n        margin-left: 10%;\n        margin-right: 10%;\n      }\n      .options {\n        display: flex;\n        flex-flow: wrap;\n        flex-direction: row;\n      }\n\n      .option {\n        background-color: rgb(255, 255, 255);\n        z-index: 0;\n        width: 40%;\n        border-radius: 10px;\n        box-shadow: 0 14px 21px rgba(0, 0, 0, 0.25),\n          0 0px 1px rgba(0, 0, 0, 0.22);\n        cursor: pointer;\n      }\n      .option:hover {\n        transform: scale(1.05);\n\n        transition: all 0.2s ease-out;\n        //animation: 1s ease-out 0s 1 normal none running fadeIn;\n        box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n          0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\n          0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n          0 41.8px 33.4px rgba(0, 0, 0, 0.086), 0 25px 20px rgba(0, 0, 0, 0.12);\n        background-color: rgb(41, 212, 41);\n        color: white;\n      }\n      .quiz {\n        background-color: rgb(250, 250, 250);\n        height: 90%;\n        overflow: auto;\n      }\n      @media only screen and (max-width: 500px) {\n        .options {\n          flex-direction: column;\n        }\n        .option {\n          width: 100%;\n        }\n        .divLast {\n          display: none !important;\n        }\n      }\n      .submit {\n        width: 100%;\n        height: 10%;\n      }\n      .btnSubmit {\n        height: 50px;\n        margin: auto;\n        background-color: rgb(41, 212, 41);\n        color: white;\n      }\n\n      .btn:focus,\n      .btn:active {\n        outline: none !important;\n        box-shadow: none !important;\n      }\n      .selectedOption {\n        background-color: rgb(41, 212, 41);\n        color: white;\n        transform: scale(1.025);\n      }\n      .root-div {\n        height: 100vh;\n        font-family: 'Trebuchet MS', sans-serif;\n      }\n      .re,\n      .le {\n        background-color: #fafafa;\n        position: relative;\n        top: 51px;\n      }\n    \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 246
            },
            "implements": [
                "OnInit"
            ]
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "QuizComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "QuizModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "QuizModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "QuizComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "QuizComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/quiz/src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/quiz/src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "projects/quiz/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/quiz/src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/quiz/src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/quiz/src/lib/question.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Option",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/quiz/src/lib/question.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Question",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/quiz/src/lib/quiz.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuizComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/quiz/src/lib/quiz.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "QuizService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/quiz/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/quiz/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/question.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Option",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/question.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Question",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}